server:
  port: 9767

spring:
  application:
    name: gateway

  redis:
    hostName: localhost
    port: 6379
    password: zhupeng
    # 连接超时时间（毫秒）
    timeout: 5000
    database: 0
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 10
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 5
      # 连接池中的最小空闲连接
      min-idle: 0




  cloud:
    config:
      discovery:
        enabled: true  #支持注册中心访问Config服务端
        service-id: config  # 配置中心服务的名称
      profile: test  #git 文件的环境
      label: master
      enabled: true  #开启Config服务发现支持
      fail-fast: true  # 当config-server服务器宕机后，config-client将快速响应失败
    bus:
        refresh:
          enabled: true  #动态刷新配置
        #跟踪总线事件
        trace:
          enabled: true


    gateway:
      discovery:
        locator:
          enabled: false   #表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，
                          #这个router将以服务名开头的请求路径转发到对应的服务
          lower-case-service-id: true    #将请求路径上的服务名配置为小写
      routes:
        - id: pc-user
          uri: lb://pc-user
          predicates:
            - Path=/pc/user/**     #访问以pc开头的请求，将被转发请求main-pc服务
          filters:
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@hostAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 1    #令牌桶每秒填充平均速率。
                redis-rate-limiter.burstCapacity: 1    #令牌桶总容量。
            - MainPcFilter
            - StripPrefix=2

        - id: mobile-user
          uri: lb://mobile-user
          predicates:
            - Path=/mobile/user/**     #访问以pc开头的请求，将被转发请求main-pc服务
          filters:
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@hostAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 1    #令牌桶每秒填充平均速率。
                redis-rate-limiter.burstCapacity: 1    #令牌桶总容量。
            - MainPcFilter
            - StripPrefix=2



# 注册中心配置
eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 20   #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除(默认90秒)
    lease-renewal-interval-in-seconds: 5       #服务刷新时间配置，每隔这个时间会主动心跳一次(默认30秒)
  client:
    service-url:
      defaultZone: http://admin:zhupeng@localhost:9761/eureka/
    registry-fetch-interval-seconds: 10  #重新刷新服务地址的时间


